<UserControl x:Class="TEditor.UserControlLayers"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TEditor"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:common="clr-namespace:TEditor.Common" 
             xmlns:viewmodels="clr-namespace:TEditor.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:UserControlLayersViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400">
    <UserControl.Resources>
        <common:BindingProxy x:Key="proxy" Data="{Binding}" />
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <Style x:Key="UserInfoStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Height="30" x:Name="grid">
                            <Border Background="Transparent"/>
                            <Border x:Name="borderDragTop" Background="Gray" Height="4" Opacity="0" VerticalAlignment="Top" 
                                    Visibility="{Binding Data.DragShowTop, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}"/>
                            <Border x:Name="borderDragBottom" Background="Gray" Height="4" Opacity="0" VerticalAlignment="Bottom"
                                    Visibility="{Binding Data.DragShowBottom, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}"/>
                            <DockPanel VerticalAlignment="Center">
                                <CheckBox IsChecked="{Binding Visible}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2 0 0 0"/>
                                <iconPacks:PackIconBootstrapIcons Kind="Arrow90degDown" Width="10" Height="10" Foreground="White" Margin="2 6 0 0" Visibility="{Binding ClippingMaskEnable, Converter={StaticResource BoolToVis}}"/>
                                <Border Background="Gray" Width="20" Height="20" CornerRadius="4" HorizontalAlignment="Left" Margin="2 0 0 0">
                                    <TextBlock Text="L" FontSize="12" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                                <TextBlock x:Name="textBlockLayerName" Text="{Binding Inner.LayerNameDisplay}" Foreground="White" VerticalAlignment="Center" Margin="4 0 0 0" FontSize="12">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ClippingMaskBottom}" Value="True">
                                                    <Setter Property="TextDecorations" Value="Baseline"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding Inner.Type}" Foreground="#808080" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 2 0" DockPanel.Dock="Right"/>
                            </DockPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="grid" Property="Background" Value="#2d2d30"/>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="true">
                                <Setter TargetName="grid" Property="Background" Value="#326cf3"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="DragEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="borderDragTop" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="borderDragBottom" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="DragLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="borderDragTop" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="borderDragBottom" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Drop">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="borderDragTop" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="borderDragBottom" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="删除" 
                                  Command="{Binding Data.MenuDeleteCommand, Source={StaticResource proxy}}"/>
                        <Separator />
                        <MenuItem Header="创建剪贴蒙版" 
                                  Command="{Binding Data.MenuEnableClippingMaskCommand, Source={StaticResource proxy}}"
                                  IsEnabled="{Binding ClippingMaskEnable, Converter={StaticResource InverseBooleanConverter}}">
                        </MenuItem>
                        <MenuItem Header="取消剪贴蒙版" 
                                  Command="{Binding Data.MenuDisableClippingMaskCommand, Source={StaticResource proxy}}"
                                  IsEnabled="{Binding ClippingMaskEnable}">
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="IsSelected" Value="{Binding Inner.IsResizing, Mode=TwoWay}" />
            <Setter Property="AllowDrop" Value="true"/>
            <EventSetter Event="MouseMove" Handler="ListBoxItem_MouseMove"/>
            <EventSetter Event="DragEnter" Handler="ListBoxItem_DragEnter"/>
            <EventSetter Event="Drop" Handler="ListBoxItem_Drop" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="24"/>
        </Grid.RowDefinitions>
        <ListBox BorderThickness="0" ItemContainerStyle="{StaticResource UserInfoStyle}" 
                 x:Name="listBoxLayers" BorderBrush="#eaeaeb" Background="{DynamicResource RegionBrush}"
                 ItemsSource="{Binding Layers}">
            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBox">
                                <Border x:Name="Bd"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0">
                                    <ScrollViewer Focusable="False">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Style>
        </ListBox>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 20 0">
            <Button x:Name="buttonDuplicateLayer" Padding="6 0" Command="{Binding DuplicateLayerCommand}">
                <iconPacks:PackIconBootstrapIcons Kind="Files" Width="12" Height="12"/>

            </Button>
            <Button x:Name="buttonDeleteLayer" Padding="6 0"  Command="{Binding DeleteLayerCommand}">
                <iconPacks:PackIconBootstrapIcons Kind="Trash" Width="12" Height="12"/>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
